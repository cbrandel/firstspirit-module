/*
 * Sample build.gradle for FirstSpirit .fsm packaging
 * https://docs.e-spirit.com/odfs/plug-developmen/implementation/module-architec/index.html
 * some ideas from here  https://stackoverflow.com/questions/25398703/gradle-analogue-for-maven-assembly-plugin
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
	id 'eclipse'
	id 'distribution'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
dependencies {
	// api, implementation deps are packaged in the fsm and added to the <resources>
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
	// compileOnly deps are not packaged and dnot added to the <resources>
    compileOnly 'commons-io:commons-io:2.11.0'
    
    // test stuff is also not packaged and dnot added to the <resources>
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'
    
}

// apply stuff from the fsm.gradle file.
// has to come _after_ dependencies block
apply from: 'fsm.gradle'

// https://github.com/gradle/gradle/issues/3839#issuecomment-512805239
eclipse {
    classpath {
        defaultOutputDir = file('build') // this should be enough
        file {
            whenMerged { // but we still need to adjust the outputs for src paths
                cp -> cp.getEntries().forEach{
                    cpEntry -> if(cpEntry.kind=='src') {
                        cpEntry.output = cpEntry.output.replace('bin/', 'build/')
                    }
                }
            }
        }
    }
}
