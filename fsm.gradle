/*
 * fsm.gradle for FirstSpirit .fsm packaging
 * https://docs.e-spirit.com/odfs/plug-developmen/implementation/module-architec/index.html
 * some ideas from here  https://stackoverflow.com/questions/25398703/gradle-analogue-for-maven-assembly-plugin
 */
 
 // create list of <resources> entries for the fsm module.xml
 ext.getResources = { ->
 	def resources = new ArrayList()
 	// calculate isolated mode
 	def fsmResourceScopeMode = (fsmIsolationMode == "il" ? "scope=\"module\" mode=\"isolated\"" : (fsmIsolationMode == "i" ? "scope=\"module\" mode=\"isolated\"" : "scope=\"server\""))
	
 	// first add project artifact
 	resources.add("<resource name=\"${group}:${name}\" ${fsmResourceScopeMode} version=\"${version}\">lib/"+ jar.getArchiveFileName().get() + "</resource>")
 	resources.addAll(configurations.runtimeClasspath.resolvedConfiguration.resolvedArtifacts.collect {
		"<resource name=\"${it.moduleVersion.id.module}\" ${fsmResourceScopeMode} version=\"${it.moduleVersion.id.version}\">lib/${it.name}-${it.moduleVersion.id.version}.${it.extension}</resource>"
	})
	return resources
}

ext {
	// some properties for use in the module.xml
	// ready-made list of <resources> entries for the fsm module.xml
	fsmResourcesList = getResources()
	// displayname
	fsmFullDisplayName = fsmDisplayName + (fsmIsolationMode == "il" ? "(I, L)" : (fsmIsolationMode== "i"? "(I)" : "(L)"))
}

// Do packaging for FirstSpirit Modules as .fsm
import org.apache.tools.ant.filters.ReplaceTokens
distributions {
  main {
   	distributionBaseName = project.name
   	// use leading slash for path to omit addition subdirectory in the zip
    contents {
      into('/lib/') {  // Copy the following jars to the /lib/ directory in the distribution archive
        from jar
        from configurations.runtimeClasspath
        dirMode = 0755
        fileMode = 0644
      }
      into('/META-INF/') {
	    from('src/main/fsm-resources') {
	    	expand(project: project)
	    }
	    dirMode = 0755
	    fileMode = 0644
	  }
    }
  }
}
// create the file with extension .fsm instead of .zip
distZip {
	archiveExtension = 'fsm'
}
// don't create the .tar file
tasks.distTar.enabled = false